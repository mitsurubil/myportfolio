{"version":3,"sources":["images/bg-hp.jpg","images/me.jpg","images/javascript-icon.svg","images/react-icon.svg","images/html5-icon.svg","images/css3-icon.svg","images/nodejs-icon.svg","images/database-icon.svg","images/heroku-icon.svg","images/pf-frigo-app.png","images/pf-bilflix.png","images/pf-recipe-app.png","videos/video.mp4","navbar.js","background.js","aboutme.js","technologies.js","skills.js","getTechnologies.js","myProjects.js","projects.js","getProjects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","href","Background","src","Bg","alt","class","aria-hidden","AboutMe","id","Me","Technology","props","logo","name","Skills","JavaScript","ReactJs","Html5","Css3","Nodejs","Mongodb","Heroku","map","skill","key","myProjects","img","target","rel","description","Projects","BilFlix","FrigoApp","RecipeApp","project","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f668a627.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-hp.391edb83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me.4859c78d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/javascript-icon.e169ba29.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-icon.eab76719.svg\";","module.exports = __webpack_public_path__ + \"static/media/html5-icon.54de1526.svg\";","module.exports = __webpack_public_path__ + \"static/media/css3-icon.2db97d69.svg\";","module.exports = __webpack_public_path__ + \"static/media/nodejs-icon.be2df796.svg\";","module.exports = __webpack_public_path__ + \"static/media/database-icon.17946dee.svg\";","module.exports = __webpack_public_path__ + \"static/media/heroku-icon.7df930e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/pf-frigo-app.97482691.png\";","module.exports = __webpack_public_path__ + \"static/media/pf-bilflix.ee9baa35.png\";","module.exports = __webpack_public_path__ + \"static/media/pf-recipe-app.24ec2159.png\";","module.exports = __webpack_public_path__ + \"static/media/video.83edd5d0.mp4\";","import React from 'react';\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\nimport { Link } from 'react-router-dom';\n\nexport default function NavBar() {\n  return (\n    <div className=\"navbar\">\n      <div className=\"portfolio\">\n        <AnchorLink href='#bg'><h2>My Portfolio</h2></AnchorLink>\n      </div>\n      <div className=\"nav\">\n        <AnchorLink href='#aboutme'><h4>About me</h4></AnchorLink>\n        <AnchorLink href='#skills'><h4>Skills</h4></AnchorLink>\n        <AnchorLink href='#projects'><h4>Projects</h4></AnchorLink>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport Bg from './images/bg-hp.jpg';\nimport video from './videos/video.mp4';\n\n\nexport default function Background() {\n    return (\n        <div className='container1'>\n            {/* <video autoPlay loop muted>\n                <source src={video} type='video/mp4' className='item' />\n            </video> */}\n            <img src={Bg} alt='Black laptop turned on' className='item' />\n            <div className='text-block'>\n                <h1>Bilal Nehiri</h1>\n                <p>Junior Full Stack Web Developer</p>\n                <a href='mailto: bilal.nehiri@gmail.com'><button>CONTACT ME!</button></a>\n                <div className='socials'>\n                    <i class=\"fa fa-github\" ></i>\n                    <i class=\"fa fa-linkedin\" aria-hidden=\"true\"></i>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport Me from './images/me.jpg';\n\nexport default function AboutMe() {\n  return (\n    <div className='aboutme' id='aboutme'>\n      <h1>About me</h1>\n      <img src={Me} alt='Me' className='me' />\n      <p>\n        Bonjour,\n          Last August I have joined Kodiri bootcamp in London to become Web Developer.\n          During this intensive 2 months I have learned Front end development with HTML, CSS, JavaScript, React and Back end development with Node Js. But also a working methodology with Agile.\n          We Mainly focused on problem solving and coding.\n          Now I am actively looking for the perfect opportunity to apply what I have learned during this past couple of months. Please Feel free to contact me if you have any suggestion.\n      </p>\n    </div>\n  );\n}","import React from 'react';\n\nfunction Technology(props) {\n    return (\n        <div className='item'>\n            <img src={props.logo} alt={`${props.name} logo`} className='logo' />\n            <div className='overlay'>\n                <p>{props.name}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Technology;","import React from 'react';\nimport Technology from './technologies';\nimport getTechnologies from './getTechnologies';\n\nexport default function Skills() {\n    return (\n        <div className='skills' id='skills'>\n            <h1>Skills</h1>\n            <div className='container2'>\n                {\n                    getTechnologies().map(skill => (\n                        <Technology\n                            key={skill.id}\n                            id={skill.id}\n                            name={skill.name}\n                            logo={skill.logo}\n                        />\n                    ))\n                }\n            </div>\n        </div>\n    );\n}","import JavaScript from './images/javascript-icon.svg';\nimport ReactJs from './images/react-icon.svg';\nimport Html5 from './images/html5-icon.svg';\nimport Css3 from './images/css3-icon.svg';\nimport Nodejs from './images/nodejs-icon.svg';\nimport Mongodb from './images/database-icon.svg';\nimport Heroku from './images/heroku-icon.svg';\n\nexport default function getTechnologies() {\n    return [\n        { id: 'javascript', name: 'JavaScript', logo: JavaScript },\n        { id: 'reactjs', name: 'ReactJS', logo: ReactJs },\n        { id: 'html5', name: 'HTML5', logo: Html5 },\n        { id: 'css3', name: 'CSS3', logo: Css3 },\n        { id: 'nodejs', name: 'Node.js', logo: Nodejs },\n        { id: 'mongodb', name: 'MongoDB', logo: Mongodb },\n        { id: 'heroku', name: 'Heroku', logo: Heroku }\n    ];\n}","import React from 'react';\n\nfunction myProjects(props) {\n    function link() {\n        return props.name === 'BilFlix' ?\n            'https://bilflix.herokuapp.com' :\n            props.name === 'Frigo-App' ?\n                'https://frigo-app.herokuapp.com' :\n                'https://mitsurubil.github.io/recipe-app/';\n    }\n    return (\n        <div className='myProjects'>\n            <img src={props.img} alt={`${props.name}`} className='projectImg' />\n            <a href={link()} target='_blank' rel='noopener noreferrer'>\n                <div className='overlap'>\n                    <p>{props.name}</p>\n                    <p>{props.description}</p>\n                </div>\n            </a>\n        </div>\n    );\n}\n\nexport default myProjects;","import React from 'react';\nimport MyProjects from './myProjects';\nimport getProjects from './getProjects';\n// import './projects.css';\n\nexport default function Projects() {\n  return (\n    <div className='projects' id='projects'>\n      <h1>Projects</h1>\n      <p>Since practice makes perfect, here are several projects I did through the Kodiri Bootcamp I attended or simply because I was curious. Please click on each desription to be redirected to the working app.</p>\n      <div className='container3'>\n        {\n          getProjects().map(project => (\n            <MyProjects\n              key={project.id}\n              id={project.id}\n              name={project.name}\n              description={project.description}\n              img={project.img}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}","import FrigoApp from './images/pf-frigo-app.png';\nimport BilFlix from './images/pf-bilflix.png';\nimport RecipeApp from './images/pf-recipe-app.png';\n\nexport default function getProjects() {\n    return [\n        { id: 'BilFlix', name: 'BilFlix', description: 'A netflix based web app built using react.js, JavaScript ES6+, HTML5, CSS3 and node.js, mongoDB on the backend.', img: BilFlix },\n        { id: 'Frigo-App', name: 'Frigo-App', description: 'A team web app that helps users avoid wasting food in their fridge by displaying color coded notifications when the Item is about to expire or expired.', img: FrigoApp },\n        { id: 'Recipe-App', name: 'Recipe-App', description: 'A very simple cooking app that allow you to look for several recipes related to one ingredient by using an API (edamam).', img: RecipeApp }\n    ];\n}","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport NavBar from './navbar';\nimport Background from './background';\nimport AboutMe from './aboutme';\nimport Skills from './skills';\nimport Projects from './projects';\n// import User from './BcBeg';//for Board challenge\nimport './App.css';\n// import { domainMatch } from 'tough-cookie';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App' id='bg'>\n        <NavBar />\n        <Background />\n        <AboutMe />\n        <Skills />\n        {/* <User firstName='Bilal' lastName='Nehiri' /> for Board Challenge */}\n        <Projects />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import 'bootstrap/dist/css/bootstrap.css';//added for myportfiolio\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// if(module.hot) {\n//     then module.hot.accept();\n// }\n"],"sourceRoot":""}